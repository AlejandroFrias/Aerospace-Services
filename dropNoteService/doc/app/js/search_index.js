var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","friendship","note","notescontroller","noteshelper","tag","tagging","user","authenticate()","create()","destroy()","find_near_me()","index()","init()","show()","update()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","friendship","note","notescontroller","noteshelper","tag","tagging","user","user::authenticate()","notescontroller#create()","notescontroller#destroy()","note::find_near_me()","notescontroller#index()","applicationcontroller#init()","notescontroller#show()","notescontroller#update()",""],"info":[["ApplicationController","","ApplicationController.html","","<p>The base controller.\n"],["ApplicationHelper","","ApplicationHelper.html","",""],["Friendship","","Friendship.html","","<p>Purpose\n<p>Used to keep track of friends (other users). Possible feature yet to be \nimplements to allow sharing …\n"],["Note","","Note.html","","<p>Purpose\n<p>Notes belong to a single user and can have many tags. A note is simply a\ntitle and text.\n<p>Schema …\n"],["NotesController","","NotesController.html","","<p>Notes can be viewed in list format, individually. They can be created,\nmodified and destroyed. Basic …\n"],["NotesHelper","","NotesHelper.html","",""],["Tag","","Tag.html","","<p>Purpose\n<p>Essentially a descriptive tag for search purposes.\n<p>Schema Information\n"],["Tagging","","Tagging.html","","<p>Purpose\n<p>Used to keep track of connections between tags and notes. This allows \nuniqueness of tags and …\n"],["User","","User.html","","<p>Purpose\n<p>A system of users has been created to limit the view of notes to just your \nown and other if needed …\n"],["authenticate","User","User.html#method-c-authenticate","(username, password)","<p>Description\n<p>Authenticates a given username/password combo. If it is a new username a\nnew user  is created. …\n"],["create","NotesController","NotesController.html#method-i-create","()","<p>POST /notes POST /notes.json A POST request to the create_url given in the\nPOI attempts to create a new …\n"],["destroy","NotesController","NotesController.html#method-i-destroy","()","<p>DELETE /notes/1 DELETE /notes/1.json A DELETE request sent to the same URL\n(update_url) will attempt …\n"],["find_near_me","Note","Note.html#method-c-find_near_me","(params, user)","<p>Returns all the public notes based on given parameters and all of the\ncurrent user&#39;s notes. Search …\n"],["index","NotesController","NotesController.html#method-i-index","()","<p>GET /notes GET /notes.json Notes can be searched for by a combination of\nusers and tags as well as a …\n"],["init","ApplicationController","ApplicationController.html#method-i-init","()","<p>Initializes the API service to only respond with xml\n"],["show","NotesController","NotesController.html#method-i-show","()","<p>GET /notes/1 GET /notes/1.json Gets all the info on the desired note (by\nid). The URL is given in the …\n"],["update","NotesController","NotesController.html#method-i-update","()","<p>PATCH/PUT /notes/1 PATCH/PUT /notes/1.json A PATCH or PUT request to the\ngiven URL (in udpate_url attribute …\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}