var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","coursecontroller","courseentry","coursehelper","find_at_time_and_building()","index()","set_format()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","coursecontroller","courseentry","coursehelper","courseentry::find_at_time_and_building()","coursecontroller#index()","applicationcontroller#set_format()",""],"info":[["ApplicationController","","ApplicationController.html","","<p>The base controller.\n"],["ApplicationHelper","","ApplicationHelper.html","",""],["CourseController","","CourseController.html","","<p>Controller for Course Service.\n<p>Services Provided\n<p>GET request all classes happening at a desired time and …\n"],["CourseEntry","","CourseEntry.html","","<p>Description\n<p>The course entry model holds all relevant data (see schema below) about  a\ncourse or class. …\n"],["CourseHelper","","CourseHelper.html","",""],["find_at_time_and_building","CourseEntry","CourseEntry.html#method-c-find_at_time_and_building","(time, bldg)","<p>Given a time and building code, finds and returns all the classes occurring\nat that time and place. …\n"],["index","CourseController","CourseController.html#method-i-index","()","<p>A GET request with a time and building parameter responds with a list of\nall courses occurring then in …\n"],["set_format","ApplicationController","ApplicationController.html#method-i-set_format","()","<p>Initializes the API service to only respond with xml\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}